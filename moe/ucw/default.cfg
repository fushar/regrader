# Configuration variables of the UCW library and their default values
# (c) 2005--2009 Martin Mares <mj@ucw.cz>

# Version of the whole package
Set("SHERLOCK_VERSION" => "3.99.2");
Set("SHERLOCK_VERSION_CODE" => 3099002);
Set("UCW_VERSION" => Get("SHERLOCK_VERSION"));
Set("UCW_VERSION_CODE" => Get("SHERLOCK_VERSION_CODE"));

# Compile everything with debug information and ASSERT's
UnSet("CONFIG_DEBUG");

# Enable aggressive optimizations depending on exact CPU type (don't use for portable packages)
UnSet("CONFIG_EXACT_CPU");

# Support files >2GB
Set("CONFIG_LARGE_FILES");

# Use shared libraries
UnSet("CONFIG_SHARED");

# If your system can't reset getopt with 'optind = 0', you need to compile our internal copy
# of GNU libc's getopt. This should not be necessary on GNU libc.
UnSet("CONFIG_OWN_GETOPT");

# Install libraries and their API includes
UnSet("CONFIG_INSTALL_API");

# Build with support for multi-threaded programs
Set("CONFIG_UCW_THREADS" => 1);

# Include Perl modules
Set("CONFIG_UCW_PERL" => 1);

# Include Perl modules written in C
UnSet("CONFIG_UCW_PERL_MODULES");

# Include support utilities for shell scripts
Set("CONFIG_UCW_SHELL_UTILS" => 1);

# Include utilities
Set("CONFIG_UCW_UTILS" => 1);

# Default configuration file
UnSet("DEFAULT_CONFIG");

# Environment variable with configuration file
UnSet("ENV_VAR_CONFIG");

# Use obsolete URL escaping rules (if you need behavior identical to the older versions of libucw)
UnSet("CONFIG_URL_ESCAPE_COMPAT");

# Allow use of direct IO on files
Set("CONFIG_DIRECT_IO");
Set("CONFIG_UCW_FB_DIRECT");

# Return success
1;
